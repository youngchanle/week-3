1) 

4) grep
- matching 
- 라인을 출력한다.
grep the animals.txt

Q. the가 있는 파일을 전채 조회하라
- -v : 조건 문자열이 없는 라인 출력

Q. /usr/lib 에 포함된 하위 디랙터리 개수 알아내기
A. ls -l /usr/lib | cut -c1 | grep d | wc -l


s) sort 
-정렬. 오름차순 (A,B,C,D)
- -r  (reverse)
- 숫자 정렬 (-n)

sort -n -r sample.txt
sort -nr smaple.txt

Q. anmials.txt  3번째 필드 숫자 => 오름차순 정렬해서 출력하자
A. cut -f3 animal.txt |sort -n

Q. 최솟값, 최댓값 출력하기
A. cut -f3 animal.txt | sort -n animla.txt | cut -c1 
A. cut -f3 animal.txt | sort -nr animla.txt | cut -c1 

Q. /etc/passed 디랙토리에서 사용자 이름 정렬하여 추출하기
A.  head /etc/passwd | cut -d: -f1 | sort
  -:로 구별된 구별된 필두증 첫번째 == 사용자
  - 전채 출력하기 (head는 10개 출력)

Q. 사용자중 root가 있는지 확인하기
A. head /etc/passwd | cut -d: -f1 | grep root
- Root, root, ROOT
- root 'abcroot'
-_root_ => w 공백 root 공백만 찾기

Q. ls, head 차이?
ls 파일의 목록
head는 파일의 내용 

# letters 내용 조회하기
6)uniq
- 중복해서 문자열을 제거해서 보여주되, 인접한 중복 문자열만
- c 갯수

Q. 성적표 파일에서 가장 빈번하지 않은 등급부터 출력하기
sort grades.txt | cut -c1 | uniq -c | sort -n | rev | cut -c1

AABCDA
sort -> uniq
AAABCD

uniq -> sort 
ABCDA



____________________________________

GIT 
1. 버전관리
- 파일의 변화를 시간에 따라 저장했다가 나중에 특정 시점의 버전으로 다시 꺼내올 수 있는 시스템

- 협업 

- 툴 ; 깃


2. 깃
- 데이터 저장방식: 스냅샷 - 적은 리소스
- 오프라인
  - 빈 -> 택스트 입력
  - 키(key) - 벨류(value)
  - 키는 고유하다. (해시)
  - 밸류 (택스트)

- 깃 상태
  - 수정
  - 커밋 : 저장
  - 스테이지 : 스냅샷 찍어서 커밋할 준비가 된 상태

  - 수정
  - 스테이징 -> 커밋

- 커밋 순서 :
  상태 채크 -> (수정) -> 스테이징 -> 커밋
  ......


1) 버전 체크
git --version

2) 사용자 정보 설정하기
- name
- email
- 옵션: --global : 전채 시스템에 영향을 준다.
  - 프로젝트마다 다른 이름을 사용하고 싶다면 옵션을 제외함

- core.edit 
  - vi 빠져나올 때는 q + enter

git config --global user.name youngchan
git config --global user.email yclee0691@daum.net

  

-git help <프로그램명>

#디렉터리
- 우리가 말하는 폴더
- 트리구조를 가진

- 하위 디랙터리 (child) 
- 상위 디랙터리 
- 형제 디렉터리

- /로 구분함
  animals/mammals/cow.txt
  <디랙터리 / ...... / 파일명>
- / : 루트 디랙터리

- 절대경로: 루트에서부터 시작
- 상대경로: 현재 기준
  -나의 현제 위치가 mammals이다. 근데 위로 가고 싶다.
  1) 절대경로 : / ....../mammalas
  2) 상대경로 : 
  .. : 부모 디랙터리
  . : 형제 디랙터리
  
- cd : chamge directory

  예: cd./mammals
      cd ..

- pwd, cd
- .. .
- mkdir

Q. new_dir 로 이동해서 디랙터리 "dir2" 만들어 보기


3) 깃 초기화
  git init: git에 모든 변경사항(스냅샷)이 저장된다.

4) 상태 채크
git startus

깃이 모르는 파일 경우
nutrackted -> add -> tracked

add -> commit

- branch 정보 : main
- 해시 - 키 정보
- init comit - 메시지

- git status
- git add <파일명>
- git comit